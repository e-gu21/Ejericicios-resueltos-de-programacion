/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import javax.swing.JOptionPane;
import entidades.*;
import java.text.DecimalFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import static presentacion.JIFGenerarCronograma.BCuota;

/**
 *
 * @author Home
 */
public class JIFConsultaCliente extends javax.swing.JInternalFrame {
    
    ClienteNatural cn = null;
    ClienteJuridico cj = null;
    Prestamo p;
    Cuota ccc;
    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form JIFConsultaCliente
     */
    public JIFConsultaCliente() {
        initComponents();
        crearTabla();
    }
    
    public void limpiar(){
        txtNombres.setText(null);
        txtClienteCorreo.setText(null);
        txtClienteDireccion.setText(null);
        txtClienteTelefono.setText(null);
        txtClientePerContacto.setText(null);
        txtClienteLabor.setText(null);
    }
    
    public void crearTabla(){
        modelo.addColumn("Cuota");
        modelo.addColumn("Fecha de Pago");
        modelo.addColumn("Pago por Interes");
        modelo.addColumn("Cajero");
        
        tblPagos.setModel(modelo);
    }
    
    public void limpiarTabla(){        
        int nf = modelo.getRowCount()-1;
        for (int i = nf; i >= 0; i--) {
            modelo.removeRow(modelo.getRowCount()-1);
        }
    }
    
    private void llenarTabla(Cuota c, int n){
        Pago p = c.getPago();
        String dato[]= new String[4];
        DecimalFormat df = new DecimalFormat("0.00");
        
        dato[0]= String.valueOf(n);
        dato[1]= String.valueOf(p.getFechaPago().getTime().toLocaleString());
        dato[2]= String.valueOf(df.format(p.getPagoxInteres()));
        dato[3]= p.getCajero();
        modelo.addRow(dato);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtClienteDireccion = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtClienteCorreo = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtClienteLabor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtClienteTelefono = new javax.swing.JTextField();
        txtClientePerContacto = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPagos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtFalta = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Consulta de Cliente");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel5.setText("Direcci√≥n:");

        jLabel2.setText("Nombres:");

        txtClienteDireccion.setEnabled(false);

        txtNombres.setBackground(new java.awt.Color(240, 240, 240));
        txtNombres.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNombres.setDoubleBuffered(true);
        txtNombres.setEnabled(false);

        jLabel6.setText("Correo:");

        jLabel1.setText("Codigo:");

        txtClienteCorreo.setEnabled(false);

        jLabel8.setText("Labor:");

        txtClienteLabor.setEnabled(false);
        txtClienteLabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteLaborActionPerformed(evt);
            }
        });

        jLabel4.setText("Telefono:");

        jLabel9.setText("Nombre Persona de Contacto:");

        txtClienteTelefono.setEnabled(false);
        txtClienteTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteTelefonoActionPerformed(evt);
            }
        });

        txtClientePerContacto.setEnabled(false);
        txtClientePerContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientePerContactoActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/Buscar2.gif"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblPagos);

        jLabel3.setText("Cuanto falta cancelar:");

        txtFalta.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(127, 127, 127)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtClienteDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(135, 135, 135)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClienteTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtClienteCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtClienteLabor, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtClientePerContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtFalta, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar)
                .addGap(171, 171, 171))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtClienteTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtClienteDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtClienteCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtClienteLabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtClientePerContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFalta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        JFMenu.vConCli=false;
    }//GEN-LAST:event_formInternalFrameClosing

    private void txtClienteLaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteLaborActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteLaborActionPerformed

    private void txtClienteTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteTelefonoActionPerformed

    private void txtClientePerContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientePerContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientePerContactoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        limpiarTabla();
        
        String dni = txtDNI.getText();
        int k=-1,l=-1,numeroCuota=1;
        float resto=0;
        DecimalFormat df = new DecimalFormat("0.00");

        if(dni.length()!=0){

            for(int i=0;i<JIFRegistroCliente.cli.getCNaturales().size();i++){
                if(dni.equals(JIFRegistroCliente.cli.getCNaturales().get(i).getCodigo())){
                    cn = JIFRegistroCliente.cli.getCNaturales().get(i);
                    txtNombres.setText(JIFRegistroCliente.cli.getCNaturales().get(i).getNombre());
                    txtClienteCorreo.setText(JIFRegistroCliente.cli.getCNaturales().get(i).getCorreo());
                    txtClienteDireccion.setText(JIFRegistroCliente.cli.getCNaturales().get(i).getDireccion());
                    txtClienteLabor.setText(JIFRegistroCliente.cli.getCNaturales().get(i).getLabor());
                    txtClienteTelefono.setText(JIFRegistroCliente.cli.getCNaturales().get(i).getTelefono());
                    txtClientePerContacto.setText(null);
                    k=0;
                    
                    for(int j=0;j<JIFRegistroPrestamo.BPres.getPrestamos().size();j++){
                        if(cn==JIFRegistroPrestamo.BPres.getPrestamos().get(j).getCliente()){
                            if(JIFRegistroPrestamo.BPres.getPrestamos().get(j).isEstado()==false){
                                l=i;
                            }
                        }
                    }
                    
                    if(l!=-1){
                
                        p= JIFRegistroPrestamo.BPres.getPrestamos().get(l);
                        
                        for(int o=0;o<JIFGenerarCronograma.BCuota.getCuotas().size();o++){
                            if(p==JIFGenerarCronograma.BCuota.getCuotas().get(o).getPrestamo()){
                                if(JIFGenerarCronograma.BCuota.getCuotas().get(o).isEstadoCuota()==true){
                                    
                                    ccc = JIFGenerarCronograma.BCuota.getCuotas().get(o);
                                    
                                    llenarTabla(ccc,numeroCuota);
                                    numeroCuota++;
                                }
                            }
                        }
                        
                        for(int o=0;o<JIFGenerarCronograma.BCuota.getCuotas().size();o++){
                            if(p==JIFGenerarCronograma.BCuota.getCuotas().get(o).getPrestamo()){
                                if(JIFGenerarCronograma.BCuota.getCuotas().get(o).isEstadoCuota()==false){
                                    
                                    ccc = JIFGenerarCronograma.BCuota.getCuotas().get(o);
                                    
                                    resto = resto + ccc.getCuota();
                                }
                            }
                        }
                        
                        txtFalta.setText(String.valueOf(df.format(resto)));

                    }
                    else{
                        JOptionPane.showMessageDialog(this, "El cliente no tiene un prestamo vigente", "Regresar", 1);
                    }
                }
            }

            for(int i=0;i<JIFRegistroCliente.cli.getCJuridicos().size();i++){
                if(dni.equals(JIFRegistroCliente.cli.getCJuridicos().get(i).getCodigo())){
                    cj = JIFRegistroCliente.cli.getCJuridicos().get(i);
                    txtNombres.setText(JIFRegistroCliente.cli.getCJuridicos().get(i).getNombre());
                    txtClienteCorreo.setText(JIFRegistroCliente.cli.getCJuridicos().get(i).getCorreo());
                    txtClienteDireccion.setText(JIFRegistroCliente.cli.getCJuridicos().get(i).getDireccion());
                    txtClienteTelefono.setText(JIFRegistroCliente.cli.getCJuridicos().get(i).getTelefono());
                    txtClientePerContacto.setText(JIFRegistroCliente.cli.getCJuridicos().get(i).getPersonaDeContacto());
                    txtClienteLabor.setText(null);
                    k=0;
                    
                    for(int j=0;j<JIFRegistroPrestamo.BPres.getPrestamos().size();j++){
                        if(cj==JIFRegistroPrestamo.BPres.getPrestamos().get(i).getCliente()){
                            if(JIFRegistroPrestamo.BPres.getPrestamos().get(i).isEstado()==false){
                                l=i;
                            }
                        }
                    }
                    if(l!=-1){
                
                        p= JIFRegistroPrestamo.BPres.getPrestamos().get(l);
                        
                        for(int o=0;o<JIFGenerarCronograma.BCuota.getCuotas().size();o++){
                            if(p==JIFGenerarCronograma.BCuota.getCuotas().get(o).getPrestamo()){
                                if(JIFGenerarCronograma.BCuota.getCuotas().get(o).isEstadoCuota()==true){
                                    
                                    ccc = JIFGenerarCronograma.BCuota.getCuotas().get(o);
                                    
                                    llenarTabla(ccc,numeroCuota);
                                    numeroCuota++;
                                }
                            }
                        }
                        
                        for(int o=0;o<JIFGenerarCronograma.BCuota.getCuotas().size();o++){
                            if(p==JIFGenerarCronograma.BCuota.getCuotas().get(o).getPrestamo()){
                                if(JIFGenerarCronograma.BCuota.getCuotas().get(o).isEstadoCuota()==false){
                                    
                                    ccc = JIFGenerarCronograma.BCuota.getCuotas().get(o);
                                    
                                    resto = resto + ccc.getCuota();
                                }
                            }
                        }
                        
                        txtFalta.setText(String.valueOf(df.format(resto)));

                    }
                    else{
                        JOptionPane.showMessageDialog(this, "El cliente no tiene un prestamo vigente", "Regresar", 1);
                    }
                }

            }
            
            if(k==-1){
                JOptionPane.showMessageDialog(this, "No hay un cliente registrado con este c√≥digo", "Regresar", 1);
                limpiar();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese un codigo", "Regresar", 1);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPagos;
    private javax.swing.JTextField txtClienteCorreo;
    private javax.swing.JTextField txtClienteDireccion;
    private javax.swing.JTextField txtClienteLabor;
    private javax.swing.JTextField txtClientePerContacto;
    private javax.swing.JTextField txtClienteTelefono;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtFalta;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
